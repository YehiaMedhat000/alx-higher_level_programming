The `2-matrix_divided` module
=============================
Using the `matrix_divided` function
-----------------------------------

##################### Importing the function #####################
>>> matrix_div = __import__("2-matrix_divided").matrix_divided
>>> 
>>> matrix_div()
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> 
>>> matrix_div([[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> 
>>> matrix_div(0)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> 
>>> matrix_div("[[1, 2, 3], [4, 5, 6]]", 0)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> 
>>> matrix_div([[1,2,3], [1, 2]], 5)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
>>> 
>>> matrix_div([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero
>>> 
>>> matrix_div([[1, 2, 3], [4, 5, 6]], "5")
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> 
>>> matrix_div([[1, 2, 3],[4, 5, 6]], float("nan"))
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> 
>>> matrix_div([[1, 2, 3], [4, 5, 6]], 5)
[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]
>>> 
